#!/usr/bin/env bash

if [ ! -f "vendor/autoload.php" ]; then
    composer install --no-progress --no-interaction
fi

echo "Creating env file for production"
cat stack.env > tmp0
cat .env.production >> tmp0
awk -F "=" '!a[$1]++' tmp0 > tmp1 && mv tmp1 .env && rm tmp0

if [ ! -z "$WWWUSER" ]; then
    usermod -u $WWWUSER sail
fi

if [ ! -d /.composer ]; then
    mkdir /.composer
fi

chmod -R ugo+rw /.composer

# role=${CONTAINER_ROLE:-app}

# if [ "$role" = "app" ]; then
    php artisan migrate
    php artisan key:generate
    php artisan cache:clear
    php artisan config:clear
    php artisan route:clear

    npm install
    npm run build

    if [ $# -gt 0 ]; then
        exec gosu $WWWUSER "$@"
    else
        exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    fi
# elif [ "$role" = "queue" ]; then
#     echo "Running the queue ... "
#     php /var/www/artisan queue:work --verbose --tries=3 --timeout=180
# elif [ "$role" = "websocket" ]; then
#     echo "Running the websocket server ... "
#     php artisan websockets:serve
# fi
