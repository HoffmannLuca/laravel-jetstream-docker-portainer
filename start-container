#!/usr/bin/env bash

if [ ! -f "vendor/autoload.php" ]; then
    composer install --no-progress --no-interaction
fi

if [ ! -f ".env" ]; then
    echo "Creating env file for env $APP_ENV"
    cp .env.example .env
else
    echo "env file exists."
fi

# TODO merge stack env with current prod env
chmod 0755 merge.sh;
sh merge.sh stack.env .env;
#

if [ ! -z "$WWWUSER" ]; then
    usermod -u $WWWUSER sail
fi

if [ ! -d /.composer ]; then
    mkdir /.composer
fi

chmod -R ugo+rw /.composer

# role=${CONTAINER_ROLE:-app}

# if [ "$role" = "app" ]; then
    php artisan migrate
    php artisan key:generate
    php artisan cache:clear
    php artisan config:clear
    php artisan route:clear

    npm install
    npm run build

    if [ $# -gt 0 ]; then
        exec gosu $WWWUSER "$@"
    else
        exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    fi
# elif [ "$role" = "queue" ]; then
#     echo "Running the queue ... "
#     php /var/www/artisan queue:work --verbose --tries=3 --timeout=180
# elif [ "$role" = "websocket" ]; then
#     echo "Running the websocket server ... "
#     php artisan websockets:serve
# fi
